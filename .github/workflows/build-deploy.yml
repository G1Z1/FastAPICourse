name: Build and Deploy code

on:
  workflow_dispatch:
    # push:
    #     branches:
    #         - main

jobs:
    Build:
        environment: Testing
        env :
            DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
            DATABASE_PORT: ${{secrets.DATABASE_PORT}}
            DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
            DATABASE_NAME: ${{secrets.DATABASE_NAME}}
            DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
            SECRET_KEY: ${{secrets.SECRET_KEY}}
            ALGORITHM: ${{secrets.ALGORITHM}}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
            POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
            POSTGRES_DB: ${{secrets.POSTGRES_DB}}
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_DB: ${{secrets.POSTGRES_DB}}_test
              POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
            ports:
              - 5432:5432
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5

        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4.2.2
            - name: Echo OK
              run: echo "OK"
            - name: Setup Python
              uses: actions/setup-python@v5.4.0
              with:
                python-version: "3.13.2"
            - name: Updated Pip
              run: python -m pip install --upgrade pip
            - name: Install Dependencies
              run: pip install -r requirements.txt
            - name: Pytest
              run: |
                pip install pytest
                pytest
            - name: Login to Docker Hub
              uses: docker/login-action@v3.3.0
              with:
                username: ${{secrets.DOCKER_HUB_USERNAME}}
                password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
            - name: Set up Docker Buildx
              # id: buildx
              uses: docker/setup-buildx-action@v3.10.0
            - name: Build and push Docker images
              id: docker_build
              uses: docker/build-push-action@v6.15.0
              with: 
                context: ./
                file: ./Dockerfile
                push: true
                tags: ${{secrets.DOCKER_HUB_USERNAME}}/fastapicourse:latest
            - name: Image digest
              run: echo ${{steps.docker_build.outputs.digest}}
    Release:
      needs: [Build]
      runs-on: ubuntu-latest
      steps:
        - name: Deploy
          run: echo "Deploying..."

# Temporary
            # - name: Extract Docker image metadata
            #   id: meta
            #   uses: docker/metadata-action@v5
            #   with:
            #     images: ${{secrets.DOCKER_HUB_USERNAME}}/my-image

            # - name: Log in to Docker Hub
            #   uses: docker/login-action@v3
            #   with:
            #     username: ${{secrets.DOCKER_HUB_USERNAME}}
            #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

            # - name: Set up Docker Buildx
            #   uses: docker/setup-buildx-action@v3
            
            # - name: Build and push Docker image
            #   uses: docker/build-push-action@v6
            #   with:
            #     push: ${{ github.event_name != 'pull_request' }}
            #     tags: ${{ steps.meta.outputs.tags }}
            #     annotations: ${{ steps.meta.outputs.annotations }}
            #     provenance: true
            #     sbom: true